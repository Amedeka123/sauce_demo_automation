import { test, expect } from "@playwright/test";
import ProductPage from "../Pages/productPage";
import ProductDetailsPage from "../Pages/productDetailsPage";
import CartPage from "../Pages/productCartPage";
import CheckoutPage from "../Pages/checkoutPage";
import CheckoutOverviewPage from "../Pages/checkoutOverviewPage";
import ThankPage from "../Pages/thankPage";
const testData = require('./testData');

test("verify that user can buy 3 products and checkout successfully", async ({ page }) => {
  const productPage = new ProductPage(page);
  const productDetailsPage = new ProductDetailsPage(page);
  const cartPage = new CartPage(page);
  const checkoutPage = new CheckoutPage(page);
  const checkoutOverviewPage = new CheckoutOverviewPage(page);
  const thankPage = new ThankPage(page);

  await page.goto(testData.url);
  await expect(productPage.productTextElement()).toHaveText(testData.productPage.productText);
  await productPage.clickBackpack();
  await expect(productDetailsPage.backpackElement()).toHaveText(testData.productDetails.backpack);
  await productDetailsPage.clickAddToCartButton();
  await expect(productDetailsPage.getCartBadgeElement()).toBeVisible();
  await productDetailsPage.clickBackButton();
  await productPage.clickBikeLight();
  await expect(productDetailsPage.backpackElement()).toHaveText(testData.productDetails.bikeLight);
  await productDetailsPage.clickAddToCartButton();
  await productDetailsPage.clickBackButton();
  await productPage.clickBoltTShirt();
  await expect(productDetailsPage.backpackElement()).toHaveText(testData.productDetails.boltTShirt);
  await productDetailsPage.clickAddToCartButton();
  await productDetailsPage.clickBackButton();
  await expect(productDetailsPage.getCartBadgeElement()).toBeVisible();
  await productDetailsPage.clickCart();
  await expect(cartPage.getCartElement()).toHaveText(testData.cartPage.cartText);
  await expect(cartPage.getCartItems()).toHaveCount(testData.cartPage.cartItemsCount);
  await expect(cartPage.getProductNameElements()).toHaveText(testData.cartPage.productNames);
  await expect(cartPage.getPriceElements()).toHaveText(testData.cartPage.productPrices);
  await cartPage.clickCheckoutButton();
  await expect(checkoutPage.getCheckoutPageTittleLocator()).toHaveText(testData.checkoutPage.title);
  await checkoutPage.enterFirstName(testData.checkoutPage.firstName);
  await checkoutPage.enterLastName(testData.checkoutPage.lastName);
  await checkoutPage.enterZipCode(testData.checkoutPage.zipCode);
  await checkoutPage.clickContinueButton();
  await expect(checkoutOverviewPage.getSubTotalElement()).toContainText("Item total: $" + (await checkoutOverviewPage.getTotalPrice()));
  await expect(checkoutOverviewPage.getTotalElement()).toContainText("Total: $" + (await checkoutOverviewPage.totalPrice()));
  await checkoutOverviewPage.clickFinishButton();
  await expect(thankPage.geThanksLocator()).toHaveText(testData.thankPage.thankYouText);
  await thankPage.clickBackHomeButton();
});
